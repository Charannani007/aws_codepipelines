version: 0.2

env:
  variables:
    MAX_ATTEMPTS: 4
    POLL_INTERVAL: 300

phases:
  install:
    runtime-versions:
      python: 3.8
    commands:
      - |
        if command -v yum >/dev/null 2>&1; then
          yum install -y jq curl
        else
          apt-get update && apt-get install -y jq curl
        fi

  build:
    commands:
      - |
        ORG_ID=$(aws secretsmanager get-secret-value --secret-id "ORG_ID" --query SecretString --output text)
        ENV_ID=$(aws secretsmanager get-secret-value --secret-id "ENV_ID" --query SecretString --output text)
        SLACK_WEBHOOK_SUCCESS=$(aws secretsmanager get-secret-value --secret-id "SLACK_WEBHOOK_SUCCESS" --query SecretString --output text)
        SLACK_WEBHOOK_FAILURE=$(aws secretsmanager get-secret-value --secret-id "SLACK_WEBHOOK_FAILURE" --query SecretString --output text)
        CLIENT_ID=$(aws secretsmanager get-secret-value --secret-id "CLIENT_ID" --query SecretString --output text)
        CLIENT_SECRET=$(aws secretsmanager get-secret-value --secret-id "CLIENT_SECRET" --query SecretString --output text)
        S3_BUCKET=$(aws secretsmanager get-secret-value --secret-id "S3_BUCKET" --query SecretString --output text)

      - |
        response=$(curl -s -X POST 'https://anypoint.mulesoft.com/accounts/api/v2/oauth2/token' \
          -H 'Content-Type: application/x-www-form-urlencoded' \
          --data-urlencode "client_id=$CLIENT_ID" \
          --data-urlencode "client_secret=$CLIENT_SECRET" \
          --data-urlencode 'grant_type=client_credentials')

        ACCESS_TOKEN=$(echo "$response" | jq -r '.access_token')
        if [ -z "$ACCESS_TOKEN" ] || [ "$ACCESS_TOKEN" = "null" ]; then
          echo "Failed to fetch access token"
          exit 1
        fi

      - aws s3 cp s3://$S3_BUCKET/app_name.txt ./app_name.txt

      - |
        if [ ! -f "app_name.txt" ]; then
          echo "app_name.txt not found"
          exit 1
        fi

        APP_NAME=$(cat app_name.txt | tr -d '\r\n')
        API_URL="https://anypoint.mulesoft.com/cloudhub/api/v2/applications/${APP_NAME}"

        attempt=0
        while [ $attempt -lt $MAX_ATTEMPTS ]; do
          response=$(curl -s --location "$API_URL" \
            --header "Authorization: Bearer $ACCESS_TOKEN" \
            --header "X-ANYPNT-ORG-ID: $ORG_ID" \
            --header "X-ANYPNT-ENV-ID: $ENV_ID")

          status=$(echo "$response" | jq -r '.status')

          if [ "$status" = "DEPLOYING" ]; then
            attempt=$((attempt + 1))
            sleep $POLL_INTERVAL
            continue

          elif [ "$status" = "STARTED" ]; then
            name=$(echo "$response" | jq -r '.domain')
            deployment_id=$(echo "$response" | jq -r '.versionId')
            cpu=$(echo "$response" | jq -r '.workers.type.cpu')
            memory=$(echo "$response" | jq -r '.workers.type.memory')
            mule_version=$(echo "$response" | jq -r '.muleVersion.version')

            message="$(echo 'Deployment SUCCESS in CloudHub:'; \
              echo "App Name: $name"; \
              echo "Deployment ID: $deployment_id"; \
              echo "Status: $status"; \
              echo "CPU: $cpu"; \
              echo "Memory: $memory"; \
              echo "Mule Version: $mule_version")"

            payload=$(jq -n --arg text "$message" '{text: $text}')
            curl -X POST -H "Content-Type: application/json" --data "$payload" "$SLACK_WEBHOOK_SUCCESS"
            exit 0

          else
            message="$(echo 'Deployment FAILED in CloudHub:'; \
              echo "Status: $status")"

            payload=$(jq -n --arg text "$message" '{text: $text}')
            curl -X POST -H "Content-Type: application/json" --data "$payload" "$SLACK_WEBHOOK_FAILURE"
            exit 1
          fi
        done

        message="$(echo 'Deployment TIMED OUT in CloudHub:'; \
          echo "Tried $MAX_ATTEMPTS times with $POLL_INTERVAL sec interval."; \
          echo "Status never reached STARTED.")"

        payload=$(jq -n --arg text "$message" '{text: $text}')
        curl -X POST -H "Content-Type: application/json" --data "$payload" "$SLACK_WEBHOOK_FAILURE"
        exit 1
