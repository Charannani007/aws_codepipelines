version: 0.2

env:
  variables:
    MAX_ATTEMPTS: 4
    POLL_INTERVAL: 300

phases:
  install:
    runtime-versions:
      python: 3.8
    commands:
      - |
        if command -v yum >/dev/null 2>&1; then
          yum install -y jq curl
        else
          apt-get update && apt-get install -y jq curl
        fi

  build:
    commands:
      - |
        ORG_ID=$(aws secretsmanager get-secret-value --secret-id "ORG_ID" --query SecretString --output text)
        ENV_ID=$(aws secretsmanager get-secret-value --secret-id "ENV_ID" --query SecretString --output text)
        SLACK_WEBHOOK_SUCCESS=$(aws secretsmanager get-secret-value --secret-id "SLACK_WEBHOOK_SUCCESS" --query SecretString --output text)
        SLACK_WEBHOOK_FAILURE=$(aws secretsmanager get-secret-value --secret-id "SLACK_WEBHOOK_FAILURE" --query SecretString --output text)
        CLIENT_ID=$(aws secretsmanager get-secret-value --secret-id "CLIENT_ID" --query SecretString --output text)
        CLIENT_SECRET=$(aws secretsmanager get-secret-value --secret-id "CLIENT_SECRET" --query SecretString --output text)
        S3_BUCKET=$(aws secretsmanager get-secret-value --secret-id "S3_BUCKET" --query SecretString --output text)

      - |
        response=$(curl -s -X POST 'https://anypoint.mulesoft.com/accounts/api/v2/oauth2/token' \
          -H 'Content-Type: application/x-www-form-urlencoded' \
          --data-urlencode "client_id=$CLIENT_ID" \
          --data-urlencode "client_secret=$CLIENT_SECRET" \
          --data-urlencode 'grant_type=client_credentials')

        ACCESS_TOKEN=$(echo "$response" | jq -r '.access_token')
        TOKEN_TYPE=$(echo "$response" | jq -r '.token_type')
        EXPIRES_IN=$(echo "$response" | jq -r '.expires_in')

        if [ -z "$ACCESS_TOKEN" ] || [ "$ACCESS_TOKEN" = "null" ]; then
          exit 1
        fi

      - aws s3 cp s3://$S3_BUCKET/app_name.txt ./app_name.txt

      - |
        if [ ! -f "app_name.txt" ]; then
          exit 1
        fi

        APP_NAME=$(cat app_name.txt | tr -d '\r\n')
        API_URL="https://anypoint.mulesoft.com/cloudhub/api/v2/applications/${APP_NAME}"

        attempt=0
        while [ $attempt -lt $MAX_ATTEMPTS ]; do
          response=$(curl -s --location "$API_URL" \
            --header "Authorization: Bearer $ACCESS_TOKEN" \
            --header "X-ANYPNT-ORG-ID: $ORG_ID" \
            --header "X-ANYPNT-ENV-ID: $ENV_ID")

          status=$(echo "$response" | jq -r '.status')

          if [ "$status" = "DEPLOYING" ]; then
            attempt=$((attempt + 1))
            sleep $POLL_INTERVAL
            continue
          elif [ "$status" = "STARTED" ]; then
            name=$(echo "$response" | jq -r '.name')
            deployment_id=$(echo "$response" | jq -r '.properties.deploymentId')
            version=$(echo "$response" | jq -r '.properties.version')
            mule_version=$(echo "$response" | jq -r '.properties.muleVersion')

            newline=$'\n'
            json_payload=$(jq -n \
              --arg text "Deployment STARTED successfully in CloudHub.${newline}• App Name: $name${newline}• Deployment ID: $deployment_id${newline}• Version: $version${newline}• Mule Version: $mule_version" \
              '{text: $text}')

            curl -X POST -H 'Content-type: application/json' --data "$json_payload" $SLACK_WEBHOOK_SUCCESS
            exit 0
          else
            error=$(echo "$response" | jq -r '.properties.errorMessage')

            newline=$'\n'
            json_payload=$(jq -n \
              --arg text "Deployment FAILED in CloudHub.${newline}• Status: $status${newline}• Error: $error" \
              '{text: $text}')

            curl -X POST -H 'Content-type: application/json' --data "$json_payload" $SLACK_WEBHOOK_FAILURE
            exit 1
          fi
        done

        newline=$'\n'
        json_payload=$(jq -n \
          --arg text "Deployment TIMED OUT after $MAX_ATTEMPTS attempts (each $POLL_INTERVAL seconds) waiting for STARTED status." \
          '{text: $text}')

        curl -X POST -H 'Content-type: application/json' --data "$json_payload" $SLACK_WEBHOOK_FAILURE
        exit 1
